{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/busy.service\";\nexport let LoadingInterceptor = /*#__PURE__*/(() => {\n  class LoadingInterceptor {\n    busyService;\n    constructor(busyService) {\n      this.busyService = busyService;\n    }\n    intercept(request, next) {\n      if (request.method === 'POST' && request.url.includes('orders')) {\n        return next.handle(request);\n      }\n      if (request.method === 'DELETE') {\n        return next.handle(request);\n      }\n      if (request.url.includes('emailexists')) {\n        return next.handle(request);\n      }\n      this.busyService.busy();\n      return next.handle(request).pipe(finalize(() => {\n        this.busyService.idle();\n      }));\n    }\n    static ɵfac = function LoadingInterceptor_Factory(t) {\n      return new (t || LoadingInterceptor)(i0.ɵɵinject(i1.BusyService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingInterceptor,\n      factory: LoadingInterceptor.ɵfac\n    });\n  }\n  return LoadingInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}